#include "includes.h"
class REG_HANDLER{
public:
	void AddToStartup(char* KEY_NAME , const char* KEY_VALUE) {
			HKEY hKey;
			DWORD disp;
			RegCreateKeyEx(HKEY_CURRENT_USER, TEXT("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"),0, NULL, 0, KEY_SET_VALUE, NULL, &hKey, &disp);
			RegSetValueEx(hKey, KEY_NAME,0,REG_SZ,(PBYTE)KEY_VALUE,(DWORD)255);
			RegFlushKey(hKey);
			RegCloseKey(hKey);
			cout << "[-] Startup Reg key added\n";
		}
	CString GetRegistry(LPCTSTR pszValueName)
		{
			HKEY hKey = NULL;
			LPCTSTR pszSubkey = _T("Software\\Microsoft\\Windows\\CurrentVersion\\Run");
			if (RegOpenKey(HKEY_CURRENT_USER, pszSubkey, &hKey) != ERROR_SUCCESS)
			{
				return (CString)"0";
			}
			TCHAR szValue[1024];
			DWORD cbValueLength = sizeof(szValue);
			if (RegQueryValueEx(
				hKey,
				pszValueName,
				NULL,
				NULL,
				reinterpret_cast<LPBYTE>(&szValue),
				&cbValueLength)
				!= ERROR_SUCCESS)
			{
				return (CString)"0";
			}
			cout << "[-] Reg key founded \n";
			return CString(szValue);
			
		}
};